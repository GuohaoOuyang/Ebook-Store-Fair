{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductBanner.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","screens/CartScreen.js","actions/cartActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","className","style","position","Control","onChange","target","value","placeholder","borderRadius","outline","border","right","cursor","backgroundColor","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","fontSize","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","a","axios","get","data","response","message","listProductDetails","ProductBanner","useEffect","Jumbotron","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","description","Button","Meta","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","Image","alt","fluid","ListGroup","length","review","createdAt","substring","productId","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","disabled","CartScreen","qty","search","Number","split","countInStock","setItem","stringify","addToCart","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","put","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","ProductEditScreen","setPrice","setImage","brand","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.66c0534f.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Form } from 'react-bootstrap'\nimport { SearchIcon } from 'react-line-awesome'\n\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline className='ml-auto' style={{position:'relative'}}> \n      <Form.Control\n        type='text'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder= 'SEARCH'\n        className='mr-sm-2 ml-sm-5'\n        style={{borderRadius:'1rem',outline:'none'}}\n      ></Form.Control>\n      <button style={{border:'none', position:'absolute', right:'0.5rem', cursor:'pointer', outline:'none', backgroundColor:'transparent'}} type='submit'><SearchIcon className='la-lg'/></button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport './Header.css'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { BalanceScaleIcon, ShoppingCartIcon } from 'react-line-awesome'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  //subscribe to store and extract data from store\n  const userLogin = useSelector((state) => state.userLogin)\n  //destructering userInfo from userLogin reducer\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant=\"dark\" className='navbar' expand='lg' collapseOnSelect >\n        <Container>\n          {/* use react-router-bootstrap to stop refreshing browser when redirect the page */}\n          <LinkContainer to='/'>\n            <Navbar.Brand><BalanceScaleIcon className='brandIcon'/></Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n          <Navbar.Collapse id='responsive-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history}/>} />\n            <Nav>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <ShoppingCartIcon className=\"cartIcon la-lg\" />\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='collasible-nav-dropdown'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link className='navlinks'>\n                    SIGN IN\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; Fair</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span variant='primary'>{text>0 && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: 'rgb(224,150,12)'\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card border=\"light\" className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong style={{fontSize:'0.8rem'}}>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={product.numReviews} \n          />\n        </Card.Text>\n\n        <Card.Text as='h3' style={{fontSize:'0.8rem'}}>Fair Price: <span style={{color:'rgb(172,45,19)'}}>${product.price}</span></Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination className='justify-content-center'>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Jumbotron, Button, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductBanner = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Jumbotron style={{backgroundSize:'contain',backgroundPosition:'right', backgroundRepeat:'no-repeat',backgroundImage:`url(${products.image})`}}>\n      <Container>\n        <h1>{products.name}</h1>  \n        <p>\n          {products.description}\n        </p>\n        <p>\n          <Button href={`/product/${products._id}`} variant=\"primary\" >Learn more</Button>\n        </p>\n      </Container>\n    </Jumbotron>\n  )\n}\n\nexport default ProductBanner\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Fair E-resources',\n  description: 'Your comprehensive e-resource cluster',\n  keywords: 'e-book, pdf, cheap, quality',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductBanner from '../components/ProductBanner'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductBanner/>\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <Container>\n      <h1 style={{fontSize:'2rem'}}>Best Sellers &nbsp;<i className='fas fa-crown' style={{color:'#ffbf00'}}></i></h1>\n        {loading ? (\n          <Loader />\n        ) \n        : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) \n        : (\n          <>\n            <Row>\n              {products.map((product) => (\n                <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n            <div>\n              <Paginate\n                pages={pages}\n                page={page}\n                keyword={keyword ? keyword : ''}\n              />\n            </div>\n\n          </>\n        )}\n      </Container>\n\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}`)\n  }\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row className='my-5'>\n            <Col md={3}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={6}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Button\n                      className='btn-block'\n                      type='button'\n                      onClick={addToCartHandler}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row className='py-3'>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1 style={{fontSize:'2rem'}}>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={3} className=\"text-center\">${item.price}</Col>\n                  <Col md={3} className=\"text-center\">\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4} className='py-5'>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, {  useEffect } from 'react'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listMyOrders } from '../actions/orderActions'\n\nconst ProfileScreen = ({ location, history }) => {\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name ) {\n        dispatch(listMyOrders())\n      } \n    }\n  }, [dispatch, history, userInfo, user])\n\n\n  return (\n    <Row>\n      <Col md={12}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1 style={{fontSize:'2rem'}} className='my-3'>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='formBasicEmail'>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Please confirm the email you want to receive product'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button className='my-3' type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1 style={{fontSize:'2rem'}} className='my-3'>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button className='my-3' type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.taxPrice = addDecimals(Number((0.13 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h1 style={{fontSize:'1.5rem'}}>Shipping</h1>\n              <p>\n                <strong>Email: </strong>\n                {cart.shippingAddress.address}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h1  style={{fontSize:'1.5rem'}}>Payment Method</h1>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h1 style={{fontSize:'1.5rem'}}>Order Items</h1>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h1 style={{fontSize:'1.5rem'}}>Order Summary</h1>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * 1, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipped To</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Designated Email: </strong>\n                {order.shippingAddress.address}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='warning'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='warning'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          1 x ${item.price} = ${1 * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                as='textarea'\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='pb-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n        <Route path='/page/:pageNumber' component={HomeScreen} exact />\n        <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}